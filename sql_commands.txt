net start mysql
mysql -u root -p
mysql -h 10.0.1.99 -u root -p
exit;
mysql> set password for root@localhost = password('123');

3. 关系模型
表-记录-字段
主键和外键
3.1 主键
1.自增整数类型 BIGINT NOT NULL AUTO_INCREMENT
2.全局唯一GUID类型
3.2 外键
外键约束
ALTER TABLE students
ADD CONSTRAINT fk_class_id
FOREIGN KEY (class_id)
REFERENCES classes (id);
ALTER TABLE students
DROP FOREIGN KEY fk_class_id;
3.3 索引
ALTER TABLE students
ADD INDEX idx_score (score);
唯一索引
ALTER TABLE students
ADD UNIQUE INDEX uni_name (name);
ALTER TABLE students
ADD CONSTRAINT uni_name UNIQUE (name);

4. 查询数据
mysql -u root -p < init-test-data.sql
mysql> source C:\Sql\init-test-data.sql
4.1 基本查询
SELECT * FROM students;

SELECT 1;
4.2 条件查询
SELECT * FROM students WHERE score >= 80 AND gender = 'M';

WHERE
AND OR NOT
= > >= < <= <> LIKE
4.3 投影查询
SELECT id, score points, name FROM students WHERE gender = 'M';

别名
4.4 排序
SELECT id, name, gender, score FROM students WHERE class_id = 1 ORDER BY score DESC, gender;

4.5 分页查询
SELECT id, name, gender, score
 FROM students 
ORDER BY score DESC 
LIMIT 3 OFFSET 0;
 LIMIT 0, 3
4.6 聚合查询
SELECT COUNT(*) boys FROM students WHERE gender = 'M';

SELECT AVG(score) average FROM students WHERE gender = 'M';

SUM AVG MAX MIN
SELECT class_id, gender, COUNT(*) num FROM students GROUP BY class_id, gender;

4.7 多表查询
SELECT * FROM students, classes;

SELECT

    s.id sid,

    s.name,

    s.gender,

    s.score,

    c.id cid,

    c.name cname

FROM students s, classes c

WHERE s.gender = 'M' AND c.id = 1;

4.8 连接查询
SELECT s.id, s.name, s.class_id, c.name class_name, s.gender, s.score

FROM students s

INNER JOIN classes c

ON s.class_id = c.id;

LEFT OUTER JOIN RIGHT OUTER JOIN FULL OUTER JOIN

5. 修改数据
5.1 INSERT
INSERT INTO students (class_id, name, gender, score) VALUES
  (1, '大宝', 'M', 87),
  (2, '二宝', 'M', 81);
5.2 UPDATE
UPDATE students SET name='大牛', score=66 WHERE id=1;

5.3 DELETE
DELETE FROM students WHERE id=1;


6. MySQL
6.1 管理MySQL
MySQL Workbench
SHOW DATABASES;
CREATE DATABASE test;
DROP DATABASE test;
USE test;
SHOW TABLES;
DESC students;
SHOW CREATE TABLE students;
CREATE TABLE classes (
    id BIGINT NOT NULL AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL,
    PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
DROP TABLE students;
ALTER TABLE students ADD COLUMN birth VARCHAR(10) NOT NULL;
ALTER TABLE students CHANGE COLUMN birth birthday VARCHAR(20) NOT NULL;
ALTER TABLE students DROP COLUMN birthday;
6.2 实用SQL语句
插入或替换
REPLACE INTO
插入或更新
INSERT INTO students (id, class_id, name, gender, score) VALUES (1, 1, '小明', 'F', 99) ON DUPLICATE KEY UPDATE name='小明', gender='F', score=99;
插入或忽略
INSERT IGNORE INTO students (id, class_id, name, gender, score) VALUES (1, 1, '小明', 'F', 99);
快照
CREATE TABLE students_of_class1 SELECT * FROM students WHERE class_id=1;
写入查询结果集
INSERT INTO statistics (class_id, average) SELECT class_id, AVG(score) FROM students GROUP BY class_id;

7. 事物
BEGIN;
UPDATE accounts SET balance = balance - 100 WHERE id = 1;
UPDATE accounts SET balance = balance + 100 WHERE id = 2;
COMMIT;/ROLLBACK;

Read Uncommitted:Dirty Read
Read Committed	:Non Repeatable Read
Repeatable Read	:Phantom Read
Serializable


